%{
#include "y.tab.h"          // Include the header file generated by Yacc
extern int yylineno;        // Declare the external line number variable
%}

%%

[ \t]+             ;       // Ignore whitespace
\n                 { yylineno++; }  // Increment line number on newline

"//".*             ;       // Ignore single-line comments starting with //

"="                { return '='; }          // Assignment operator
";"                { return ';'; }          // Semicolon
"+"                { return '+'; }          // Plus operator
","                { return ','; }          // Comma
"("                { return '('; }          // Opening parenthesis
")"                { return ')'; }          // Closing parenthesis

"length"           { return LENGTH; }       // Length function
"reverse"          { return REVERSE; }      // Reverse function
"substring"        { return SUBSTRING; }    // Substring function
"palindrome"       { return PALINDROME; }   // Palindrome function
"toupper"          { return TOUPPER; }      // Convert string to uppercase
"tolower"          { return TOLOWER; }      // Convert string to lowercase
"padleft"          { return PADLEFT; }      // Pad string on the left
"padright"         { return PADRIGHT; }     // Pad string on the right
"trim"             { return TRIM; }         // Trim whitespace from both ends
"find"             { return FIND; }         // Find substring within a string

[a-zA-Z_][a-zA-Z0-9_]*  { yylval.sval = strdup(yytext); return ID; }  // Identifiers

\"([^"\\]|\\.)*\"      { yylval.sval = strdup(yytext); return STRING_LITERAL; }  // String literals

[0-9]+               { yylval.ival = atoi(yytext); return NUMBER; }    // Numbers

.                    { return yytext[0]; }    // Return any other character as is

%%

int yywrap(void) { return 1; }
